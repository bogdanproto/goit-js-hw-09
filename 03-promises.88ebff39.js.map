{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAM,CACVC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,iBAsCpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,SAASO,EAAiBC,EAAKC,GAChB,YAATA,EACFC,EAAAnB,GAASoB,OAAOC,QAAQJ,GACN,YAATC,EACTC,EAAAnB,GAASoB,OAAOE,QAAQL,GAExBE,EAAAnB,GAASoB,OAAOG,KAAKN,E,CAvDzBf,EAAIC,KAAKqB,iBAAiB,UAE1B,SAAoBC,GAClBA,EAAIC,iBAwDkBC,EAvDPzB,EAAII,UAwDnBqB,EAAQC,UAAW,EADrB,IAAwBD,EArDtB,MAAME,EAAgB,IACdpB,MAAAqB,EAAKC,KAAEA,EAAIC,OAAEA,GAAWP,EAAIQ,cAAcC,SAC5CC,EAAYC,OAAOL,EAAKM,OACxBC,EAAgBF,OAAOJ,EAAOK,OACpC,IAAIE,EAAeH,OAAON,EAAMO,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAeE,GAAK,EAAG,CAC1C,MAAMC,EAAUlC,EAAciC,EAAGD,GAC9BG,MAAK,EAAClC,SAAEA,EAAQC,MAAEA,MACjBO,EACE,uBAAqBR,QAAiBC,MAAW,UAC/C,IAGLkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClBO,EACE,sBAAoBR,QAAeC,MAAW,UAC9C,IAIN8B,GAAgBJ,EAChBN,EAAce,KAAKH,E,CAIrB/B,QAAQmC,WAAWhB,GAAea,MAAK,IA+BzC,SAAyBf,GACvBA,EAAQC,UAAW,C,CAhC0BkB,CAAgB5C,EAAII,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ref = {\n  form: document.querySelector('.form'),\n  btnCreate: document.querySelector('.form button'),\n};\n\nref.form.addEventListener('submit', submitForm);\n\nfunction submitForm(evt) {\n  evt.preventDefault();\n  disableElement(ref.btnCreate);\n\n  const arrayPromises = [];\n  const { delay, step, amount } = evt.currentTarget.elements;\n  const stepDelay = Number(step.value);\n  const amountPromise = Number(amount.value);\n  let delayPromise = Number(delay.value);\n\n  for (let i = 1; i <= amountPromise; i += 1) {\n    const promice = createPromise(i, delayPromise)\n      .then(({ position, delay }) => {\n        showNotification(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n          'success'\n        );\n      })\n      .catch(({ position, delay }) => {\n        showNotification(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n          'failure'\n        );\n      });\n\n    delayPromise += stepDelay;\n    arrayPromises.push(promice);\n  }\n\n  // make button activate when all promise will have done\n  Promise.allSettled(arrayPromises).then(() => activateElement(ref.btnCreate));\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction showNotification(str, type) {\n  if (type === 'success') {\n    Notiflix.Notify.success(str);\n  } else if (type === 'failure') {\n    Notiflix.Notify.failure(str);\n  } else {\n    Notiflix.Notify.info(str);\n  }\n}\n\nfunction disableElement(element) {\n  element.disabled = true;\n}\n\nfunction activateElement(element) {\n  element.disabled = false;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$ref","form","document","querySelector","btnCreate","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$showNotification","str","type","$parcel$interopDefault","Notify","success","failure","info","addEventListener","evt","preventDefault","element","disabled","arrayPromises","delay1","step","amount","currentTarget","elements","stepDelay","Number","value","amountPromise","delayPromise","i","promice","then","catch","push","allSettled","$47d4ff9957288465$var$activateElement"],"version":3,"file":"03-promises.88ebff39.js.map"}